trigger:
- main

variables:
  azureResourceManagerConnection: 'Functions'
  azureFunctionsAppName: 'AzureDevOpsFunct'
  azureDevOpsOrganisationName: foxholenl
  azureDevOpsPersonalAccessToken: ''
  AADGraphDirectoryId: ''
  AADGraphApplicationId: ''
  AADGraphApplicationToken: ''
  disableAPIOperations: true

pool:
  vmImage: 'ubuntu-latest'

steps:
- task: NodeTool@0
  inputs:
    versionSpec: '12.x'
    checkLatest: true
  displayName: 'Setup Node'

- task: Bash@3
  inputs:
    targetType: 'inline'
    script: 'npm run build-function'
  displayName: 'Run NPM Install and Typescript compile'

- task: ArchiveFiles@2
  inputs:
    rootFolderOrFile: '$(Build.SourcesDirectory)/dist-function'
    includeRootFolder: false
    archiveType: 'zip'
    archiveFile: '$(Build.ArtifactStagingDirectory)/$(Build.BuildId).zip'
    replaceExistingArchive: true
  displayName: 'Create Function Zip file'

- task: AzureFunctionApp@1
  inputs:
    azureSubscription: $(azureResourceManagerConnection)
    appType: 'functionAppLinux'
    appName: $(azureFunctionsAppName)
    package: '$(Build.ArtifactStagingDirectory)/$(Build.BuildId).zip'
    appSettings: '-azureDevOpsOrganisationName $(azureDevOpsOrganisationName) -azureDevOpsPersonalAccessToken $(azureDevOpsPersonalAccessToken) -AADGraphDirectoryId $(AADGraphDirectoryId) -AADGraphApplicationId $(AADGraphApplicationId) -AADGraphApplicationToken $(AADGraphApplicationToken) -disableAPIOperations $(disableAPIOperations)'